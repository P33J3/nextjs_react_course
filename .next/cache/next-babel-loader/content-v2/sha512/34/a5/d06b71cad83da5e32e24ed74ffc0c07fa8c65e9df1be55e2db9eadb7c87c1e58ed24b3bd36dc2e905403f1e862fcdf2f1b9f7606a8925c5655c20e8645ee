{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Coding\\\\Udemy\\\\23 Next-js\\\\nextjs bigger-project\\\\pages\\\\[meetupId]\\\\index.js\";\n//meetupId is in [] as it is a placeholder name for the ID which changes dynamically depending on the page.\nimport MeetupDetail from '../../components/meetups/MeetUpDetail';\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://img.emg-services.net/HtmlPages/HtmlPage13951/large-spain-hola.png\",\n    title: \"First Meetup\",\n    address: \"Some Street 5, Some City\",\n    description: \"This is a first meetup!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }, this);\n}\n\n_c = MeetupDetails;\n; // needed if you run getStaticProps\n//describe all the dynamic adresses\n// export async function getStaticPaths() {\n//   return {\n//     //fallbaack:false implies that all pages are covered below; if user inputs another page they get a 404 error page. \n//     fallback: false,\n//     paths: [\n//       {\n//         params: {\n//           meetupId: \"m1\",\n//         },\n//       },\n//       {\n//         params: {\n//           meetupId: \"m2\",\n//         },\n//       },\n//     ],\n//   };\n// };\n\n;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["D:/Coding/Udemy/23 Next-js/nextjs bigger-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails"],"mappings":";;AAAA;AAEA,OAAOA,YAAP,MAAyB,uCAAzB;;AAKA,SAASC,aAAT,GAAyB;AACrB,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,2EADR;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,OAAO,EAAC,0BAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQH;;KATQA,a;AASR,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAmBC;;AAgCD,eAAeA,aAAf","sourcesContent":["//meetupId is in [] as it is a placeholder name for the ID which changes dynamically depending on the page.\r\n\r\nimport MeetupDetail from '../../components/meetups/MeetUpDetail';\r\n\r\nimport { MongoClient } from 'mongodb';\r\n\r\n\r\nfunction MeetupDetails() {\r\n    return (\r\n      <MeetupDetail\r\n        image=\"https://img.emg-services.net/HtmlPages/HtmlPage13951/large-spain-hola.png\"\r\n        title=\"First Meetup\"\r\n        address=\"Some Street 5, Some City\"\r\n        description=\"This is a first meetup!\"\r\n      />\r\n    );\r\n};\r\n\r\n// needed if you run getStaticProps\r\n//describe all the dynamic adresses\r\n// export async function getStaticPaths() {\r\n//   return {\r\n//     //fallbaack:false implies that all pages are covered below; if user inputs another page they get a 404 error page. \r\n//     fallback: false,\r\n//     paths: [\r\n//       {\r\n//         params: {\r\n//           meetupId: \"m1\",\r\n//         },\r\n//       },\r\n\r\n//       {\r\n//         params: {\r\n//           meetupId: \"m2\",\r\n//         },\r\n//       },\r\n//     ],\r\n//   };\r\n// };\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect('mongodb+srv://PJAdmin:9QkEwf687hNyctz@cluster0.ybiuc.mongodb.net/Projectnextjs?retryWrites=true&w=majority'); \r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n//empty object below means find all values, second criteria changes this\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n  \r\n  return {\r\n    //fallbaack:false implies that all pages are covered below; if user inputs another page they get a 404 error page.\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n};\r\n\r\nexport async function getStaticProps(context) {\r\n  \r\n  \r\n  //fetch data for a single meetup\r\n  const meetupId = context.params.meetupId;\r\n// console.log(meetupId);\r\n\r\nconst client = await MongoClient.connect('mongodb+srv://PJAdmin:9QkEwf687hNyctz@cluster0.ybiuc.mongodb.net/Projectnextjs?retryWrites=true&w=majority'); \r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n//empty object below means find all values, second criteria changes this\r\n  const selectedMeetup = meetupsCollectionfindOne({})\r\n\r\n  client.close();\r\n  \r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        image:\"https://img.emg-services.net/HtmlPages/HtmlPage13951/large-spain-hola.png\",\r\n        id: 'm1',\r\n        title:'First Meetup',\r\n        address: \"Some Street 5, Some City\",\r\n        description: \"This is a first meetup!\",\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}
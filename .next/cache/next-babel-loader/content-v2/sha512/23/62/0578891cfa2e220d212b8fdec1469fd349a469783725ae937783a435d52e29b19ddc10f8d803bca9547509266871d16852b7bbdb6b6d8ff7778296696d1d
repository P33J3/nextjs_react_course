{"ast":null,"code":"import _defineProperty from \"D:/Coding/Udemy/23 Next-js/nextjs bigger-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Coding\\\\Udemy\\\\23 Next-js\\\\nextjs bigger-project\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport '../styles/globals.css';\nimport Layout from '../components/layout/Layout';\n/* this is considered the root component that nextjs will render, object destructuring is used to pull information out of the props.\nComponent is a prop which holds the pages' contents\npageProps holds the props which pages might be getting; it is dynamic and changes depending on the page.\nEg, Wrapping Component with the <Layout> Component, transfer all the styles from into the components\nIt allows you to wrap one component instead of individually wrapping each component with your styles.|| When you have a general component \nyou want to apply to the entire app, you use this fi\n  */\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["D:/Coding/Udemy/23 Next-js/nextjs bigger-project/pages/_app.js"],"names":["Layout","MyApp","Component","pageProps"],"mappings":";;;;;;;;AAAA,OAAO,uBAAP;AACA,OAAOA,MAAP,MAAmB,6BAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,KAAT,OAAyC;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;AACvC,sBACE,QAAC,MAAD;AAAA,2BACE,QAAC,SAAD,oBAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KANQF,K;AAQT,eAAeA,KAAf","sourcesContent":["import '../styles/globals.css'\nimport Layout from '../components/layout/Layout';\n\n/* this is considered the root component that nextjs will render, object destructuring is used to pull information out of the props.\nComponent is a prop which holds the pages' contents\npageProps holds the props which pages might be getting; it is dynamic and changes depending on the page.\nEg, Wrapping Component with the <Layout> Component, transfer all the styles from into the components\nIt allows you to wrap one component instead of individually wrapping each component with your styles.|| When you have a general component \nyou want to apply to the entire app, you use this fi\n  */\n\nfunction MyApp({ Component, pageProps }) {\n  return (\n    <Layout>\n      <Component {...pageProps} />\n    </Layout>\n  );\n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}
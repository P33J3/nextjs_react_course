{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Coding\\\\Udemy\\\\23 Next-js\\\\nextjs bigger-project\\\\pages\\\\[meetupId]\\\\index.js\";\n//meetupId is in [] as it is a placeholder name for the ID which changes dynamically depending on the page.\nimport { MongoClient, ObjectId } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetUpDetail';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"add a New Meetup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Add your own meetups and create amazing networking oppurtunities.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this);\n}\n\n; // needed if you run getStaticProps\n//describe all the dynamic adresses\n// export async function getStaticPaths() {\n//   return {\n//     //fallbaack:false implies that all pages are covered below; if user inputs another page they get a 404 error page. \n//     fallback: false,\n//     paths: [\n//       {\n//         params: {\n//           meetupId: \"m1\",\n//         },\n//       },\n//       {\n//         params: {\n//           meetupId: \"m2\",\n//         },\n//       },\n//     ],\n//   };\n// };\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://PJAdmin:9QkEwf687hNyctz@cluster0.ybiuc.mongodb.net/Projectnextjs?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups'); //empty object below means find all objects, second criteria searches fields\n\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    //fallbaack:false implies that all pages are covered below; if user inputs another page they get a 404 error page.\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\n;\nexport async function getStaticProps(context) {\n  //fetch data for a single meetup\n  const meetupId = context.params.meetupId; // console.log(meetupId);\n\n  const client = await MongoClient.connect('mongodb+srv://PJAdmin:9QkEwf687hNyctz@cluster0.ybiuc.mongodb.net/Projectnextjs?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups'); // ObjectId converts variable to MongoDB object\n\n  const selectedMeetup = await meetupsCollection.findOne({}, {\n    _id: ObjectId(meetupId)\n  });\n  console.log(selectedMeetup);\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n} //   return {\n//     props: {\n//       meetupData: {\n//         image:\"https://img.emg-services.net/HtmlPages/HtmlPage13951/large-spain-hola.png\",\n//         id: 'm1',\n//         title:'First Meetup',\n//         address: \"Some Street 5, Some City\",\n//         description: \"This is a first meetup!\",\n//       }\n//     }\n//   }\n// }\n\nexport default MeetupDetails;","map":{"version":3,"sources":["D:/Coding/Udemy/23 Next-js/nextjs bigger-project/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","console","log","id"],"mappings":"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","sourcesContent":["//meetupId is in [] as it is a placeholder name for the ID which changes dynamically depending on the page.\r\n\r\nimport { MongoClient, ObjectId } from 'mongodb';\r\n\r\nimport MeetupDetail from '../../components/meetups/MeetUpDetail';\r\n\r\n\r\n\r\n\r\nfunction MeetupDetails(props) {\r\n    return (\r\n      <Fragment>\r\n      <Head>\r\n        {/*Insert All the tags you would put in the head section of HTML */}\r\n        <title>add a New Meetup</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Add your own meetups and create amazing networking oppurtunities.\"\r\n        />\r\n      </Head>\r\n     \r\n   \r\n\r\n      <MeetupDetail\r\n      image={props.meetupData.image}\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n      />\r\n       </Fragment>\r\n    );\r\n};\r\n\r\n// needed if you run getStaticProps\r\n//describe all the dynamic adresses\r\n// export async function getStaticPaths() {\r\n//   return {\r\n//     //fallbaack:false implies that all pages are covered below; if user inputs another page they get a 404 error page. \r\n//     fallback: false,\r\n//     paths: [\r\n//       {\r\n//         params: {\r\n//           meetupId: \"m1\",\r\n//         },\r\n//       },\r\n\r\n//       {\r\n//         params: {\r\n//           meetupId: \"m2\",\r\n//         },\r\n//       },\r\n//     ],\r\n//   };\r\n// };\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect('mongodb+srv://PJAdmin:9QkEwf687hNyctz@cluster0.ybiuc.mongodb.net/Projectnextjs?retryWrites=true&w=majority'); \r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n//empty object below means find all objects, second criteria searches fields\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n \r\n\r\n  client.close();\r\n  \r\n  return {\r\n    //fallbaack:false implies that all pages are covered below; if user inputs another page they get a 404 error page.\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n};\r\n\r\nexport async function getStaticProps(context) {\r\n  \r\n  \r\n  //fetch data for a single meetup\r\n  const meetupId = context.params.meetupId;\r\n// console.log(meetupId);\r\n\r\nconst client = await MongoClient.connect('mongodb+srv://PJAdmin:9QkEwf687hNyctz@cluster0.ybiuc.mongodb.net/Projectnextjs?retryWrites=true&w=majority'); \r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n\r\n// ObjectId converts variable to MongoDB object\r\n  const selectedMeetup = await meetupsCollection.findOne({}, { _id: ObjectId(meetupId), });\r\n\r\n  console.log(selectedMeetup);\r\n\r\n  client.close();\r\n  \r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: selectedMeetup._id.toString(),\r\n        title: selectedMeetup.title,\r\n        address: selectedMeetup.address,\r\n        image: selectedMeetup.image,\r\n        description: selectedMeetup.description,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\n\r\n//   return {\r\n//     props: {\r\n//       meetupData: {\r\n//         image:\"https://img.emg-services.net/HtmlPages/HtmlPage13951/large-spain-hola.png\",\r\n//         id: 'm1',\r\n//         title:'First Meetup',\r\n//         address: \"Some Street 5, Some City\",\r\n//         description: \"This is a first meetup!\",\r\n//       }\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}